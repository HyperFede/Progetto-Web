Routes API di tipo auth:

-POST api/auth/login
-POST api/auth/logout


#1 login:

Accesso: pubblico, senza middleware

Input: Oggetto JSON nel corpo della richiesta (req.body) con i seguenti campi:
     {
         "username": "String (obbligatorio)",
         "password": "String (obbligatorio)"
     }
Output:
    - Successo (200 OK): Oggetto JSON contenente il token JWT e i dati dell'utente (senza password).
      { 
        "token": "aaaaa.bbbbbb.cccccc", 
        "user": { "idutente": Number, "username": String, ... }, 
        "message": "Stringa di successo" 
      }
    - Errore (400 Bad Request): Se username o password mancano nel corpo della richiesta.
      { "message": "Stringa di errore" }
    - Errore (401 Unauthorized): Se le credenziali (username o password) non sono valide
                                 o se l'utente è marcato come 'deleted'.
      { "message": "Stringa di errore" }
    - Errore (500 Internal Server Error): In caso di errore del server.
      { "message": "Stringa di errore" }

#2 logout:

Accesso: pubblico TODO da cambiare


 il logout è principalmente una responsabilità del client:
 il client deve eliminare il token memorizzato (es. da localStorage, sessionStorage, o cookie).

 restituisce uno status (200) che ricorda al client di sbarazzarsi del token

